
//32(33)Bit
`timescale 1ns/1ps
module BFI_tb;
reg clk;
wire [32:0]x;
wire [32:0]y;
wire [64:0]result;

BFI i1 (
	.clk(clk),
	.result(result),
	.x(x),
	.y(y)
);

always
	#10 clk=~clk;
	
initial
begin
	clk=0;
	//x=7'b0_10_0111;
	//y=7'b0_10_0111;
	#2000 $stop;
end
endmodule
//*/


/*
//16(17)Bit
`timescale 1ns/1ps
module BFI_tb;
reg clk;
wire [16:0]x;
wire [16:0]y;
wire [32:0]result;

BFI i1 (
	.clk(clk),
	.result(result),
	.x(x),
	.y(y)
);

always
	#10 clk=~clk;
	
initial
begin
	clk=0;
	//x=7'b0_10_0111;
	//y=7'b0_10_0111;
	#200 $stop;
end
endmodule
//*/


/*
//6(7)Bit
`timescale 1ns/1ps
module BFI_tb;
reg clk;
wire [6:0]x;
wire [6:0]y;
wire [12:0]result;

BFI i1 (
	.clk(clk),
	.result(result),
	.x(x),
	.y(y)
);

always
	#10 clk=~clk;
	
initial
begin
	clk=0;
	//x=7'b0_10_0111;
	//y=7'b0_10_0111;
	#200 $stop;
end
endmodule
//*/



/*
//Test
`timescale 1ns/1ps
module BFI_tb;
reg clk;
reg [8:0]x;
reg cin;
reg [8:0]prin;
wire [8:0]prout;
wire [5:0]yout;
wire cout;

reg [5:0]yin;

cho i2(prout,yout, cout,cin,prin,x,yin,clk);

always
	#10 clk=~clk;
	
initial
begin
	clk=0;
	prin=0;
	x=9'b000_10_0111;
	yin=6'b10_0111;
	cin=0;
	#40 $stop;
end
endmodule
//*/



